/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_caps {
            timeout-ms = <50>;
            key-positions = <37 39>;
            bindings = <&kp CAPS>;
        };
    };
};

&led_strip { chain-length = <11>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //
            // ------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |||||  Y  |  U  |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |||||  H  |  J  |  K  |  L  |  ;  |    ''     |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |||||  N  |  M  |  ,  |  .  |  /  | SHFT(RET) |
            //                         | NUM | GUI | SPC | LWR | RSE |
            //

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E           &kp R           &kp T             &kp Y  &kp U      &kp I            &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D           &kp F           &kp G             &kp H  &kp J      &kp K            &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C           &kp V           &kp B             &kp N  &kp M      &kp COMMA        &kp DOT  &kp FSLH  &mt RSHFT RET
                              &lt 3 LEFT_ALT  &lt 1 LEFT_GUI         &kp SPACE         &lt 4 DEL  &lt 2 RIGHT_ALT
            >;
        };

        lower_layer {
            //
            // -------------------------------------------------------------------------------
            // | ESC  |  !  |  @  |  #  |  $  |  %  ||||||  ^  |  &  |  *  |  =  |  \  | DEL |
            // | CTRL |  {  |  (  |  )  |  }  |  ~  ||||||  ←  |  ↓  |  ↑  |  →  |  :  |  `  |
            // | SHFT |     |  [  |  ]  |     |     ||||||  +  |  -  |  _  |     |     |     |
            //                        |     | GUI | trans | trans |     |
            //

            bindings = <
&kp ESC  &kp EXCL  &kp AT    &kp HASH        &kp DLLR        &kp PRCNT             &kp CARET  &kp AMPS   &kp ASTRK        &kp EQUAL  &kp BSLH   &none
&none    &kp LBRC  &kp LPAR  &kp RPAR        &kp RBRC        &kp TILDE             &kp LEFT   &kp DOWN   &kp UP           &kp RIGHT  &kp COLON  &kp GRAVE
&none    &none     &kp LBKT  &kp RBKT        &none           &none                 &kp PLUS   &kp MINUS  &kp UNDER        &none      &none      &none
                             &lt 3 LEFT_ALT  &lt 1 LEFT_GUI             &kp SPACE             &lt 4 DEL  &lt 2 RIGHT_ALT
            >;
        };

        raise_layer {
            //
            // -------------------------------------------------------------------------------
            // | LY0 |  1  |  2  |  3  |  4  |  5  |||||  6  |  7  |  8  |  9  |  0  |  DEL  |
            // |     |     |     |     |     |     |||||     |     |     |     |     |       |
            // |BTCLR| BOOT|     |     |     |     |||||     |     |     |     |     |       |
            //                        |     |     |     |     |     |
            //

            bindings = <
&kp F1      &kp F2       &kp F3  &kp F4          &kp F5          &kp F6             &kp F7  &kp F8     &kp F9           &kp F10  &kp F11  &kp F12
&none       &none        &none   &none           &none           &none              &none   &none      &none            &none    &none    &none
&bt BT_CLR  &bootloader  &none   &none           &none           &none              &none   &none      &none            &none    &none    &none
                                 &lt 3 LEFT_ALT  &lt 1 LEFT_GUI          &kp SPACE          &lt 4 DEL  &lt 2 RIGHT_ALT
            >;
        };

        num_layer {
            //
            // ---------------------------------------------------------------------------------
            // | LY0 |  F1  |     |     |     |     |||||||     |  7  |  8  |  9  |     | BKSP |
            // |     | VOL+ |     |     |     |     |||||||     |  4  |  5  |  6  |     |      |
            // |     | VOL- |     |     |     |     |||||||     |  1  |  2  |  3  |     |      |
            //                         |     |      |       |  0  |  .  |
            //     

            bindings = <
&kp GRAVE     &kp AT_SIGN  &kp UP_ARROW    &none            &none  &none             &none  &kp N7   &kp N8        &kp N9  &none  &none
&kp C_VOL_UP  &kp LEFT     &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none             &none  &kp N4   &kp N5        &kp N6  &none  &none
&kp C_VOL_DN  &none        &none           &none            &none  &none             &none  &kp N1   &kp N2        &kp N3  &none  &none
                                           &trans           &none         &kp SPACE         &kt DOT  &kt NUMBER_0
            >;
        };

        layer_4 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                       &none            &none            &none   &none  &none  &rgb_ug RGB_TOG
&none         &none         &none         &none         &none         &rgb_ug RGB_BRI             &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &none   &none  &none  &none
&bt BT_CLR    &none         &none         &none         &none         &rgb_ug RGB_BRD             &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &none   &none  &none  &bt BT_CLR_ALL
                                          &trans        &trans                         &kp SPACE                   &trans           &trans
            >;
        };
    };
};
